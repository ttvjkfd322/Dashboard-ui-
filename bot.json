require('dotenv').config();
const { Client, GatewayIntentBits } = require('discord.js');
const fs = require('fs');

const configFile = './config.json';

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ]
});

let config = {
  prefix: '!',
};

// Load config if exists
if (fs.existsSync(configFile)) {
  config = JSON.parse(fs.readFileSync(configFile, 'utf-8'));
}

// Command handlers
client.on('messageCreate', async (message) => {
  if (message.author.bot) return;

  if (!message.content.startsWith(config.prefix)) return;

  const args = message.content.slice(config.prefix.length).trim().split(/ +/);
  const command = args.shift().toLowerCase();

  if (command === 'ping') {
    await message.reply('🏓 Pong!');
  }

  if (command === 'say') {
    const text = args.join(' ');
    if (text) {
      await message.channel.send(text);
    } else {
      await message.reply('You need to type a message!');
    }
  }
});

client.once('ready', () => {
  console.log(`✅ Bot logged in as ${client.user.tag}`);
});

// --- Simple HTTP API to receive dashboard commands ---
const express = require('express');
const app = express();
app.use(express.json());

app.post('/api/say', (req, res) => {
  const { message } = req.body;
  const channelId = process.env.DEFAULT_CHANNEL_ID;

  if (!channelId) {
    console.error('No DEFAULT_CHANNEL_ID set in .env');
    return res.status(500).send('Channel not set');
  }

  const channel = client.channels.cache.get(channelId);
  if (channel) {
    channel.send(message);
    res.json({ ok: true });
  } else {
    console.error('Channel not found');
    res.status(404).send('Channel not found');
  }
});

app.post('/api/settings', (req, res) => {
  const { prefix } = req.body;
  if (prefix) {
    config.prefix = prefix;
    fs.writeFileSync(configFile, JSON.stringify(config, null, 2));
    console.log(`✅ Prefix updated to ${prefix}`);
  }
  res.json({ ok: true });
});

app.post('/api/restart', (req, res) => {
  console.log('♻️ Restarting bot...');
  res.json({ ok: true });
  process.exit(0);
});

app.listen(3001, () => console.log('Bot API listening on port 3001'));

// Login to Discord
client.login(process.env.DISCORD_BOT_TOKEN);